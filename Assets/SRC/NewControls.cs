//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/SRC/NewControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @NewControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @NewControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""NewControls"",
    ""maps"": [
        {
            ""name"": ""PLAYER"",
            ""id"": ""412438f4-51b8-4cf5-a837-fc8c0b5e52e2"",
            ""actions"": [
                {
                    ""name"": ""Horizontal"",
                    ""type"": ""Value"",
                    ""id"": ""42d4fc8c-5e4e-4f1a-b9f7-bd0e45622ae8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6e741bf4-58f6-40be-aed6-8db13bcac4ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Value"",
                    ""id"": ""5e24d726-1587-4166-8186-a611c951af96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Kick"",
                    ""type"": ""Button"",
                    ""id"": ""1f9dae5e-fc9e-4f89-bdba-e26275e19245"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""57897512-e385-4e04-80f8-8ef6bac6ca5d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Value"",
                    ""id"": ""5bef4609-c1df-455b-958d-d200e10a6288"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Special"",
                    ""type"": ""Button"",
                    ""id"": ""96402ca5-cf14-45d8-afa4-e136691a0049"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventary"",
                    ""type"": ""Button"",
                    ""id"": ""d7765136-ab70-4d6d-aded-ee3b591a5597"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c8edbf23-9fc3-48b4-9168-df0a61491cc9"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""87abd777-a93e-454c-a144-792d691fd8ef"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""8865f7d4-025d-4916-8e8b-26c4ae6d55aa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""3f8f4dc9-e1d7-4c9a-ad7a-873ab0572826"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6bfd8cd4-0850-4f4a-92f8-a3df2cd22c17"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""944f7b9f-7bba-4173-8288-1b584ad3897d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0433ec4d-5df9-4d89-8a53-01a1c483a935"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4372a102-412e-451c-87c2-0a654ed5410c"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b06880d-02ca-4319-b346-170fbf207128"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e911e42-97c9-43b6-9b52-25970ecc7225"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecd8199e-f62b-4253-a6b3-c6500fff0729"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80d871df-18f1-4458-a172-dbaad3260d9b"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a04c8115-b5dd-425c-8c2a-18c9e1aba775"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Inventary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24fc88f2-d460-4052-a343-bd13a7a63f3f"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""763d4a13-aa0b-4ef7-9614-10e1eded27aa"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d061358e-3def-45e2-abb1-38984fd8e4b6"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d0091e1-e09c-4ef8-be31-e4fa23d1e698"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DIALOGOS"",
            ""id"": ""a631abb2-8d50-4db4-a861-71768ce95a1c"",
            ""actions"": [
                {
                    ""name"": ""Comenzar"",
                    ""type"": ""Button"",
                    ""id"": ""2662e24d-bea2-42c2-8465-8909e4082b60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""8235d781-14d5-4ce1-9ecd-b3edec8b85c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4e4b92a5-bbbf-46a2-a172-09f3e256ce78"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Comenzar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""802273c7-78f4-4bae-89a8-9ba9ef3c592e"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Comenzar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d4c089c-b240-40ec-843b-fb8a68be2286"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KEYBOARD"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59bdbadd-927b-41cc-92b8-7ba09119475b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GAMEPAD"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KEYBOARD"",
            ""bindingGroup"": ""KEYBOARD"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GAMEPAD"",
            ""bindingGroup"": ""GAMEPAD"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PLAYER
        m_PLAYER = asset.FindActionMap("PLAYER", throwIfNotFound: true);
        m_PLAYER_Horizontal = m_PLAYER.FindAction("Horizontal", throwIfNotFound: true);
        m_PLAYER_Jump = m_PLAYER.FindAction("Jump", throwIfNotFound: true);
        m_PLAYER_Run = m_PLAYER.FindAction("Run", throwIfNotFound: true);
        m_PLAYER_Kick = m_PLAYER.FindAction("Kick", throwIfNotFound: true);
        m_PLAYER_Dash = m_PLAYER.FindAction("Dash", throwIfNotFound: true);
        m_PLAYER_Shoot = m_PLAYER.FindAction("Shoot", throwIfNotFound: true);
        m_PLAYER_Special = m_PLAYER.FindAction("Special", throwIfNotFound: true);
        m_PLAYER_Inventary = m_PLAYER.FindAction("Inventary", throwIfNotFound: true);
        // DIALOGOS
        m_DIALOGOS = asset.FindActionMap("DIALOGOS", throwIfNotFound: true);
        m_DIALOGOS_Comenzar = m_DIALOGOS.FindAction("Comenzar", throwIfNotFound: true);
        m_DIALOGOS_Next = m_DIALOGOS.FindAction("Next", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PLAYER
    private readonly InputActionMap m_PLAYER;
    private IPLAYERActions m_PLAYERActionsCallbackInterface;
    private readonly InputAction m_PLAYER_Horizontal;
    private readonly InputAction m_PLAYER_Jump;
    private readonly InputAction m_PLAYER_Run;
    private readonly InputAction m_PLAYER_Kick;
    private readonly InputAction m_PLAYER_Dash;
    private readonly InputAction m_PLAYER_Shoot;
    private readonly InputAction m_PLAYER_Special;
    private readonly InputAction m_PLAYER_Inventary;
    public struct PLAYERActions
    {
        private @NewControls m_Wrapper;
        public PLAYERActions(@NewControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Horizontal => m_Wrapper.m_PLAYER_Horizontal;
        public InputAction @Jump => m_Wrapper.m_PLAYER_Jump;
        public InputAction @Run => m_Wrapper.m_PLAYER_Run;
        public InputAction @Kick => m_Wrapper.m_PLAYER_Kick;
        public InputAction @Dash => m_Wrapper.m_PLAYER_Dash;
        public InputAction @Shoot => m_Wrapper.m_PLAYER_Shoot;
        public InputAction @Special => m_Wrapper.m_PLAYER_Special;
        public InputAction @Inventary => m_Wrapper.m_PLAYER_Inventary;
        public InputActionMap Get() { return m_Wrapper.m_PLAYER; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PLAYERActions set) { return set.Get(); }
        public void SetCallbacks(IPLAYERActions instance)
        {
            if (m_Wrapper.m_PLAYERActionsCallbackInterface != null)
            {
                @Horizontal.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnHorizontal;
                @Horizontal.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnHorizontal;
                @Horizontal.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnHorizontal;
                @Jump.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnJump;
                @Run.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnRun;
                @Kick.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnKick;
                @Kick.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnKick;
                @Kick.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnKick;
                @Dash.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDash;
                @Shoot.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnShoot;
                @Special.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnSpecial;
                @Special.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnSpecial;
                @Special.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnSpecial;
                @Inventary.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnInventary;
                @Inventary.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnInventary;
                @Inventary.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnInventary;
            }
            m_Wrapper.m_PLAYERActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Horizontal.started += instance.OnHorizontal;
                @Horizontal.performed += instance.OnHorizontal;
                @Horizontal.canceled += instance.OnHorizontal;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Kick.started += instance.OnKick;
                @Kick.performed += instance.OnKick;
                @Kick.canceled += instance.OnKick;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Special.started += instance.OnSpecial;
                @Special.performed += instance.OnSpecial;
                @Special.canceled += instance.OnSpecial;
                @Inventary.started += instance.OnInventary;
                @Inventary.performed += instance.OnInventary;
                @Inventary.canceled += instance.OnInventary;
            }
        }
    }
    public PLAYERActions @PLAYER => new PLAYERActions(this);

    // DIALOGOS
    private readonly InputActionMap m_DIALOGOS;
    private IDIALOGOSActions m_DIALOGOSActionsCallbackInterface;
    private readonly InputAction m_DIALOGOS_Comenzar;
    private readonly InputAction m_DIALOGOS_Next;
    public struct DIALOGOSActions
    {
        private @NewControls m_Wrapper;
        public DIALOGOSActions(@NewControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Comenzar => m_Wrapper.m_DIALOGOS_Comenzar;
        public InputAction @Next => m_Wrapper.m_DIALOGOS_Next;
        public InputActionMap Get() { return m_Wrapper.m_DIALOGOS; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DIALOGOSActions set) { return set.Get(); }
        public void SetCallbacks(IDIALOGOSActions instance)
        {
            if (m_Wrapper.m_DIALOGOSActionsCallbackInterface != null)
            {
                @Comenzar.started -= m_Wrapper.m_DIALOGOSActionsCallbackInterface.OnComenzar;
                @Comenzar.performed -= m_Wrapper.m_DIALOGOSActionsCallbackInterface.OnComenzar;
                @Comenzar.canceled -= m_Wrapper.m_DIALOGOSActionsCallbackInterface.OnComenzar;
                @Next.started -= m_Wrapper.m_DIALOGOSActionsCallbackInterface.OnNext;
                @Next.performed -= m_Wrapper.m_DIALOGOSActionsCallbackInterface.OnNext;
                @Next.canceled -= m_Wrapper.m_DIALOGOSActionsCallbackInterface.OnNext;
            }
            m_Wrapper.m_DIALOGOSActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Comenzar.started += instance.OnComenzar;
                @Comenzar.performed += instance.OnComenzar;
                @Comenzar.canceled += instance.OnComenzar;
                @Next.started += instance.OnNext;
                @Next.performed += instance.OnNext;
                @Next.canceled += instance.OnNext;
            }
        }
    }
    public DIALOGOSActions @DIALOGOS => new DIALOGOSActions(this);
    private int m_KEYBOARDSchemeIndex = -1;
    public InputControlScheme KEYBOARDScheme
    {
        get
        {
            if (m_KEYBOARDSchemeIndex == -1) m_KEYBOARDSchemeIndex = asset.FindControlSchemeIndex("KEYBOARD");
            return asset.controlSchemes[m_KEYBOARDSchemeIndex];
        }
    }
    private int m_GAMEPADSchemeIndex = -1;
    public InputControlScheme GAMEPADScheme
    {
        get
        {
            if (m_GAMEPADSchemeIndex == -1) m_GAMEPADSchemeIndex = asset.FindControlSchemeIndex("GAMEPAD");
            return asset.controlSchemes[m_GAMEPADSchemeIndex];
        }
    }
    public interface IPLAYERActions
    {
        void OnHorizontal(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnKick(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnSpecial(InputAction.CallbackContext context);
        void OnInventary(InputAction.CallbackContext context);
    }
    public interface IDIALOGOSActions
    {
        void OnComenzar(InputAction.CallbackContext context);
        void OnNext(InputAction.CallbackContext context);
    }
}
